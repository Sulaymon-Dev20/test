{"ast":null,"code":"import axios from 'axios';\nimport { api, getTimeBus, routeProps } from '../../api/apis';\nexport const BEGIN_ROUTE_PROPS = 'BEGIN_ROUTE_PROPS';\nexport const SUCCESS_ROUTE_PROPS = 'SUCCESS_ROUTE_PROPS';\nexport const ERROR_ROUTE_PROPS = 'ERROR_ROUTE_PROPS';\nexport const getRouteProps = () => async dispatch => {\n  dispatch({\n    type: BEGIN_ROUTE_PROPS\n  });\n\n  try {\n    const res = await axios.get(api + routeProps);\n    dispatch({\n      type: SUCCESS_ROUTE_PROPS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: ERROR_ROUTE_PROPS\n    });\n    console.error(\"Error\");\n  }\n};\nexport const BEGIN_ROUTE_STATIONS = 'BEGIN_ROUTE_STATIONS';\nexport const SUCCESS_ROUTE_STATIONS = 'SUCCESS_ROUTE_STATIONS';\nexport const ERROR_ROUTE_STATIONS = 'ERROR_ROUTE_STATIONS';\nexport const getRouteStations = id => async dispatch => {\n  dispatch({\n    type: BEGIN_ROUTE_STATIONS\n  });\n  console.log(\"Begin\");\n\n  try {\n    // const res = await axios.get(api + getByRoot + \"550\");\n    const res = await axios.get(\"http://localhost:8010/api/mobile/v2/getByRoot/\" + id);\n    console.log(res.data);\n    dispatch({\n      type: SUCCESS_ROUTE_STATIONS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: ERROR_ROUTE_STATIONS\n    });\n    console.error(\"ro Error\");\n  }\n};\nexport const BEGIN_TIME_BUS = 'BEGIN_TIME_BUS';\nexport const SUCCESS_TIME_BUS = 'SUCCESS_TIME_BUS';\nexport const ERROR_TIME_BUS = 'ERROR_TIME_BUS';\nexport const getTimeBusByStationId = id => async dispatch => {\n  dispatch({\n    type: BEGIN_TIME_BUS\n  });\n  console.log(\"Begin bus time\");\n\n  try {\n    const res = await axios.get(api + getTimeBus + id);\n    console.log(res.data);\n    dispatch({\n      type: SUCCESS_TIME_BUS,\n      payload: res.data.object\n    });\n  } catch (e) {\n    dispatch({\n      type: ERROR_TIME_BUS\n    });\n    console.error(\"get by time Error\");\n  }\n};\nexport const BEGIN_SET_ID = 'BEGIN_SET_ID';\nexport const ERROR_SET_ID = 'ERROR_SET_ID';\nexport const setRouteId = id => async dispatch => {\n  if (id != null) {\n    dispatch({\n      type: BEGIN_SET_ID,\n      payload: id\n    });\n  } else {\n    dispatch({\n      type: ERROR_SET_ID,\n      payload: 0\n    });\n  }\n};","map":{"version":3,"sources":["/media/my-word-com/Новый том/MYBUS.FRONTEND/MYBUS/src/redux/apiMobileV2/ApiMobileV2Action.js"],"names":["axios","api","getTimeBus","routeProps","BEGIN_ROUTE_PROPS","SUCCESS_ROUTE_PROPS","ERROR_ROUTE_PROPS","getRouteProps","dispatch","type","res","get","payload","data","e","console","error","BEGIN_ROUTE_STATIONS","SUCCESS_ROUTE_STATIONS","ERROR_ROUTE_STATIONS","getRouteStations","id","log","BEGIN_TIME_BUS","SUCCESS_TIME_BUS","ERROR_TIME_BUS","getTimeBusByStationId","object","BEGIN_SET_ID","ERROR_SET_ID","setRouteId"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {api, getTimeBus, routeProps} from '../../api/apis'\n\nexport const BEGIN_ROUTE_PROPS = 'BEGIN_ROUTE_PROPS';\nexport const SUCCESS_ROUTE_PROPS = 'SUCCESS_ROUTE_PROPS';\nexport const ERROR_ROUTE_PROPS = 'ERROR_ROUTE_PROPS';\n\nexport const getRouteProps = () => async dispatch => {\n    dispatch({type: BEGIN_ROUTE_PROPS});\n    try {\n        const res = await axios.get(api + routeProps);\n        dispatch({type: SUCCESS_ROUTE_PROPS, payload: res.data});\n    } catch (e) {\n        dispatch({type: ERROR_ROUTE_PROPS});\n        console.error(\"Error\");\n    }\n};\n\nexport const BEGIN_ROUTE_STATIONS = 'BEGIN_ROUTE_STATIONS';\nexport const SUCCESS_ROUTE_STATIONS = 'SUCCESS_ROUTE_STATIONS';\nexport const ERROR_ROUTE_STATIONS = 'ERROR_ROUTE_STATIONS';\n\nexport const getRouteStations = (id) => async dispatch => {\n    dispatch({type: BEGIN_ROUTE_STATIONS});\n    console.log(\"Begin\");\n    try {\n        // const res = await axios.get(api + getByRoot + \"550\");\n        const res = await axios.get(\"http://localhost:8010/api/mobile/v2/getByRoot/\" + id);\n        console.log(res.data);\n        dispatch({type: SUCCESS_ROUTE_STATIONS, payload: res.data});\n    } catch (e) {\n        dispatch({type: ERROR_ROUTE_STATIONS});\n        console.error(\"ro Error\");\n    }\n};\n\nexport const BEGIN_TIME_BUS = 'BEGIN_TIME_BUS';\nexport const SUCCESS_TIME_BUS = 'SUCCESS_TIME_BUS';\nexport const ERROR_TIME_BUS = 'ERROR_TIME_BUS';\n\nexport const getTimeBusByStationId = (id) => async dispatch => {\n    dispatch({type: BEGIN_TIME_BUS});\n    console.log(\"Begin bus time\");\n    try {\n        const res = await axios.get(api + getTimeBus + id);\n        console.log(res.data);\n        dispatch({type: SUCCESS_TIME_BUS, payload: res.data.object});\n    } catch (e) {\n        dispatch({type: ERROR_TIME_BUS});\n        console.error(\"get by time Error\");\n    }\n};\n\nexport const BEGIN_SET_ID = 'BEGIN_SET_ID';\nexport const ERROR_SET_ID = 'ERROR_SET_ID';\n\nexport const setRouteId = (id) => async dispatch => {\n    if (id != null) {\n        dispatch({type: BEGIN_SET_ID, payload: id});\n    } else {\n        dispatch({type: ERROR_SET_ID, payload: 0});\n    }\n};\n"]},"metadata":{},"sourceType":"module"}